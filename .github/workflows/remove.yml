name: Remove action@github.com commits

on:
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'true = do not push, only analyze (default: false)'
        required: false
        default: 'false'

permissions:
  contents: write

jobs:
  remove-commits:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true
          fetch-tags: true

      - name: Fetch all refs (ensure all branches/tags present)
        run: |
          git fetch --prune origin '+refs/heads/*:refs/heads/*' '+refs/tags/*:refs/tags/*'

      - name: Install git-filter-repo
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install git-filter-repo

      - name: Create commit-callback script
        run: |
          cat > remove_by_author.py <<'PY'
          def commit_callback(commit, metadata):
              # 删除 author 或 committer email 为 action@github.com 的提交
              if commit.author_email == b"action@github.com" or commit.committer_email == b"action@github.com":
                  commit.skip()
          PY

      - name: Run git-filter-repo (rewrite history)
        id: filter_run
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

          if [ "${{ github.event.inputs.dry_run }}" = "true" ]; then
            echo "DRY RUN: analyze only (no push)"
            # --analyze 会生成统计信息而不修改 refs（保守检查）
            git filter-repo --force --commit-callback remove_by_author.py --analyze
            exit 0
          fi

          # 真正执行重写历史
          git filter-repo --force --commit-callback remove_by_author.py

      - name: Push rewritten refs (branches and tags)
        if: ${{ github.event.inputs.dry_run != 'true' }}
        run: |
          # push each branch with force
          for ref in $(git for-each-ref --format='%(refname)' refs/heads); do
            echo "Pushing $ref ..."
            git push origin +${ref}:refs/heads/${ref#refs/heads/} || {
              echo "Push failed for $ref (maybe protected)"; 
            }
          done

          # push tags
          git push origin --tags --force || echo "Tag push failed"
